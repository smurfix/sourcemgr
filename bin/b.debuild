#!/bin/bash
test -n "$BK_REPOSITORY" || export BK_REPOSITORY=bk://bitkeeper.noris.de

set -e
trap 'test -n "$superset" && kill $SUPERPID; usage; exit 1' 0

RPM="-v --rcfile /usr/src/STATUS/rpmrc"
BUILD=/usr/src/redhat/BUILD

if test -f /usr/local/bin/gpg-agent-start.sh ; then
	source /usr/local/bin/gpg-agent-start.sh
fi
if test -f /usr/local/bin/ssh-agent-start.sh ; then
	source /usr/local/bin/ssh-agent-start.sh
fi

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- Baue Debian-Source-Pakete.
	   [ -d Paket ]  [ -v release ]
	   [ -t HOST (upload there) ]
	   [ -b (build a binary) ]
END
    trap "" 0
    exit 1
}

dir=
defvers=noris
vers=
dest=local
bin=

   eval set -- "$(getopt "bd:t:v:h" "$@")"
   if test $? != 0
   then
	   exit 1
   fi
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -b)
		   		shift; bin=y ;;
		   -d)
			   shift; recargs="$recargs -d $1"; dir="$1"; shift;;
		   -v)
			   shift; vset=1; basev="$1"; shift;;
			--)
				shift; break;;
	   esac
   done

if test -n "$basev" -a -z "$vers"; then
	vers=$basev
	basev=$defbase
else
	test -n "$vers" || vers=$defvers
	test -n "$basev" || basev=$defbase
fi

b.name "$dir" > /tmp/bn.$$
read dir overs < /tmp/bn.$$
if test -z "$vset" ; then vers="$overs" ; fi
rm -f /tmp/bn.$$

what=$(echo $dir | sed -e 's/:/_/g'  -e 's/\//_/g' -e 's/_*$//')
desc=$(echo $dir | sed -e 's/_/:/g'  -e 's/\//:/g' -e 's/:*$//')
dir=$(echo $desc | sed -e 's/:/\//g')
ddir="$(basename $dir)"

test -n "$vers" || vers=$defvers
# does not work
#read what bkrel <(b.exists -d "$what" -v "$vers")

b.exists -d "$what" -v "$vers" >/tmp/b.rpm.$$
read what bkrel </tmp/b.rpm.$$
rm -f /tmp/b.rpm.$$

if test -z "$bkrel" ; then
	vget=""
else
	vget="-v $bkrel"
fi

cd "$(b.cache -d "$what" $vget)"
trap '' 0

## no longer needed, as we just called 'b.cache'
## Make sure we're in the BK root
#test -d BitKeeper
## Make sure there are no outstanding changes
#test "$(bk sfiles -xcg | wc -l)" -eq 0
## Make sure the remote repository doesn't have more than we do
#test "$(bk changes -d':I:\n' -R | wc -l)" -eq 0

# Tag this release with the current version and push it
V="$(head -1 debian/version)"
test -n "$V"
if bk prs -r+ -d'$if(:TAG:){$each(:TAG:){:TAG:\\n}}' -h ChangeSet | fgrep -xqs "DEBIAN-$V"
then : ; else
	bk tag -r+ DEBIAN-$V
	bk push -q
fi

# Now build the source archives
T="/tmp/ex.$$"
trap 'rm -rf $T' 0 1 2 15
N="$ddir"
E="$(bk prs -rEXTERN -h -d:SHORTKEY: ChangeSet)" || true
A="$(dpkg-architecture -qDEB_BUILD_ARCH)"

b.uplog

DV="$V"
V="$(echo $DV | sed -ne 's/\(..*\)-..*/\1/p' )"
if test -z "$V" ; then E=""; V="$DV"; fi
bk export -T -w -tplain -r+ . "$T/$N-$V"
mv debian/changelog "$T/$N-$V"/debian
( cd "$T/$N-$V" ; rm debian/users debian/version )
if test -n "$E" ; then # non-original package
	bk export -T -w -tplain -rEXTERN . "$T/$N-$V.orig"
fi
( cd $T; dpkg-source -b -sa "$N-$V" )
( cd "$T/$N-$V" ; fakeroot dpkg-buildpackage -S )
( cd "$T/$N-$V" ; dpkg-genchanges -S > "../${N}_${DV}_source.changes" )
( cd "$T/$N-$V" ; test -z "$bin" || fakeroot dpkg-buildpackage -nc -b )
#( cd $T; debsign "${N}_${DV}_source.changes" )
#( cd $T; test -z "$bin" || debsign "${N}_${DV}_$A.changes" )
( cd $T ; for i in * ; do if test -d $i; then rm -rf $i; fi; done )
echo "Built:"
ls $T
echo ""
#mv $T/* ..
( cd $T; for f in *.changes; do dput $dest "$f"; done )

#dpkg-buildpackage -S -rfakeroot -IPENDING -Idebian/users -Idebian/version -IBitkeeper -ISCCS "$@"


