#!/bin/bash
test -n "$BK_REPOSITORY" || export BK_REPOSITORY=bk://bitkeeper.noris.de

set -e
trap 'test -n "$superset" && kill $SUPERPID; usage; exit 1' 0

RPM="-v --rcfile /usr/src/STATUS/rpmrc"
BUILD=/usr/src/redhat/BUILD

if test -f /usr/local/bin/gpg-agent-start.sh ; then
	source /usr/local/bin/gpg-agent-start.sh
fi
if test -f /usr/local/bin/ssh-agent-start.sh ; then
	source /usr/local/bin/ssh-agent-start.sh
fi
if ssh-add -l >/dev/null 2>&1 ; then : ; else
	ssh-add
fi

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- Baue Debian-Source-Pakete.
		[ -d Paket ]  [ -v release ]  [ -t HOST (upload there) ]
		[ -b (build a binary) ]  [ -B (with pbuilder) ]
			[ -i (install binaries afterwards) ]
		[ -s? (pass to dpkg-*) ]  [ -k (keep tempdir) ]
		[ -n (ignore lintan errors) ]  [ -S (don't sign ]
		[ -V VERS -- include changes since VERS ]
END
    trap "" 0
    exit 1
}

dir=
defvers=noris
vers=
dest=local
inst=
bin=
pbin=
opt_s=
keep=
lwarn=
nosign=
opt_v=

   eval set -- "$(getopt "bBd:ikns:St:v:V:h" "$@")"
   if test $? != 0
   then
	   exit 1
   fi
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -n)
		   		shift; lwarn=y ;;
		   -i)
		   		shift; inst=y ;;
		   -b)
		   		shift; bin=y ;;
		   -k)
		   		shift; keep=y ;;
		   -B)
		   		shift; pbin=y ;;
		   -S)
		   		shift; nosign=y ;;
		   -V)
			   shift; opt_v="-v$1"; shift;;
		   -s)
			   shift; opt_s="-s$1"; shift;;
		   -d)
			   shift; dir="$1"; shift;;
		   -v)
			   shift; vset=1; basev="$1"; shift;;
			--)
				shift; break;;
	   esac
   done

if test -n "$inst" -a -z "$bin$pbin" ; then
	usage
fi

if test -n "$basev" -a -z "$vers"; then
	vers=$basev
	basev=$defbase
else
	test -n "$vers" || vers=$defvers
	test -n "$basev" || basev=$defbase
fi

if test -z "$dir" -a -z "$vset" ; then # from current directory
	if test $(bk sfiles -xgc | fgrep -v '/SCCS/' | wc -l) -gt 0 ; then
		trap "" 0
		echo "Unsaved files." >&2
		exit 1
	fi
	bk pull
	if test -d RESYNC ; then
		echo "Unmergeable changes." >&2
		exit 1
	fi
	echo -n "Pushing local version to "; bk parent -p
	bk push -q
fi

b.name "$dir" > /tmp/bn.$$
read dir overs < /tmp/bn.$$
if test -z "$vset" ; then vers="$overs" ; fi
rm -f /tmp/bn.$$

what=$(echo $dir | sed -e 's/[:\/]/_/g' -e 's/_*$//')
dir=$(echo $what | sed -e 's/_/\//g')

test -n "$vers" || vers=$defvers
# does not work
#read what bkrel <(b.exists -d "$what" -v "$vers")

b.exists -d "$what" -v "$vers" >/tmp/b.rpm.$$
read what bkrel </tmp/b.rpm.$$
rm -f /tmp/b.rpm.$$

if test -z "$bkrel" ; then
	vget=""
else
	vget="-v $bkrel"
fi

cd "$(b.cache -d "$what" $vget)"
trap '' 0

## no longer needed, as we just called 'b.cache'
## Make sure we're in the BK root
#test -d BitKeeper
## Make sure there are no outstanding changes
#test "$(bk sfiles -xcg | wc -l)" -eq 0
## Make sure the remote repository doesn't have more than we do
#test "$(bk changes -d':I:\n' -R | wc -l)" -eq 0

# Tag this release with the current version and push it
bk get -q debian/control debian/changelog
V="$(dpkg-parsechangelog | sed -ne 's/^Version:[ 	]*//p')"

N="$(sed -n -e 's/^Source: //p' debian/control | head -1)"
test -n "$N" || N="$(basename "$dir")"

test -n "$V"
if bk prs -r+ -d'$if(:TAG:){$each(:TAG:){:TAG:\\n}}' -h ChangeSet | fgrep -xqs "DEBIAN-$V"
then : ; else
	bk tag -r+ DEBIAN-$V
	bk push -q
fi

# Now build the source archives
T="/var/tmp/ex.$$"
if test -z "$keep" ; then
	trap 'rm -rf $T' 0 1 2 15
else
	trap 'echo DIR $T' 0 1 2 15
fi
E="$(bk prs -rEXTERN -h -d:SHORTKEY: ChangeSet)" || true
A="$(dpkg-architecture -qDEB_BUILD_ARCH)"

b.uplog

DV="$V"
V="$(echo $DV | sed -ne 's/\(..*\)-..*/\1/p' )"
if test -z "$V" ; then E=""; V="$DV"; fi
VV="$(echo "$V" | sed -e 's/^[0-9][0-9]*://')"

DV="$(echo "$DV" | sed -e 's/^[0-9][0-9]*://')"

bk export -T -w -tplain -r+ . "$T/$N-$VV"
if test -f "$T/$N-$VV"/debian/exporter ; then
	"$T/$N-$VV"/debian/exporter "$T/$N-$VV" "+"
fi
test -f "$T/$N-$VV"/debian/changelog || mv debian/changelog "$T/$N-$VV"/debian

if test -n "$E" ; then # non-original package
	if \
	   wget -qq -O "$T/${N}_$VV.orig.tar.gz" \
		"http://smurf.noris.de/code/debian/unstable/source/${N}_$VV.orig.tar.gz" ||
	   wget -qq -O "$T/${N}_$VV.orig.tar.gz" \
		"http://smurf.noris.de/code/debian/public/${N}_$VV.orig.tar.gz" ||
	   false
	then
		echo + get original source via HTTP
	else
		echo + create new original source archive
		rm -f "$T/${N}_$VV.orig.tar.gz"
		bk export -T -w -tplain -rEXTERN . "$T/$N-$VV.orig"
		if test -f "$T/$N-$VV"/debian/exporter ; then
			"$T/$N-$VV"/debian/exporter "$T/$N-$VV.orig" "EXTERN"
		fi
	fi
fi

cd "$T/$N-$VV"
rm -f debian/users debian/version debian/exporter debian/changelog.old || true
cd $T
# dpkg-source -b -sa "$N-$VV"
cd "$T/$N-$VV"
fakeroot dpkg-buildpackage -S $opt_s -uc -us
dpkg-genchanges $opt_v -S $opt_s > "../${N}_${DV}_source.changes"
test -z "$bin" || fakeroot dpkg-buildpackage -nc -b -uc -us
test -z "$pbin" || pdebuild --buildresult "$T" -- --debbuildopts "-nc -b"

cd $T
test -n "$nosign" || echo y | debsign "${N}_${DV}_source.changes"
test -n "$nosign" -o -z "$pbin$bin" || echo y | debsign "${N}_${DV}_$A.changes"
cd $T
for i in * ; do if test -d $i; then rm -rf $i; fi; done
echo "Built:"
ls 
echo ""
#mv $T/* ..

for f in *.changes; do
	if lintian -viI "$f" && linda -viI "$f" || test -n "$lwarn" ; then : ; else
		echo "Error in $f: Aborting.\n"; >&2
		exit 1
	fi
done

for f in *.changes; do
	dput $dest "$f"
done
if test -n "$inst" ; then
	sudo dpkg -i *.deb
fi

#dpkg-buildpackage -S -rfakeroot -IPENDING -Idebian/users -Idebian/version -IBitkeeper -ISCCS "$@"


