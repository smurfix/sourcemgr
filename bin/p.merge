#!/bin/sh

set -e
trap 'usage; exit 1' 0

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- Update lokaler Sourcen bei Konflikten beim Checkin
       [ -d Paket ]
       [ -v releasename ]
       [ -e (editiere alle Dateien mit Konflikten sofort) ]
       [ -m (manuelle Angabe der Aktionen) ]
       [ -o (lösche "obsolete"-Unterverzeichnisse NICHT) ]
       [ -r (rekursiv nach weiteren Projekten suchen) ]
       [ -R (dito, Basis auslassen) ]
END
}

dir=
vers=
auto=-f
skipobs=
rec=
recopt=

   eval set -- "$(getopt "d:v:hemorR" "$@")"
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -d)
			   shift; dir="$1"; shift;;
		   -v)
			   shift; recopt="$recopt -v $1" ; vers="-r $1"; shift;;
			-o)
				shift; recopt="$recopt -o" ; skipobs=y ;;
			-m)
				shift; recopt="$recopt -m" ; auto= ;;
			-e)
				shift; recopt="$recopt -e" ; export PRCS_CONFLICT_EDITOR=vi ;;
			-R)
				shift; recopt="$recopt -r" ; rec=only ;;
			-r)
				shift; recopt="$recopt -r" ; rec=y ;;
			--)
				shift; break;
	   esac
   done

set -e

dir="$(p.name "$dir")"
desc=$(echo $dir | sed -e 's/\//:/g' -e 's/:*$//')

if test -f "/usr/src/STATUS/checkout/$desc" ; then
    desc=$(sed  -e 's/[ 	].*//' "/usr/src/STATUS/checkout/$desc")
    what=$(echo $desc | sed -e 's/[:\/]/_/g' -e 's/_*$//')
else
    what=$(echo $dir | sed -e 's/\//_/g' -e 's/_*$//')
fi

export PRCS_REPOSITORY=${PRCS_REPOSITORY:-/usr/src/archiv/prcs} PRCS_LOGQUERY=1

trap '' 0

if [ "$rec" != "only" ] ; then
	echo + prcs merge $auto $vers $what
	prcs merge $auto $vers $what
	test -n "$skipobs" || find . -name obsolete -type d -print0 | xargs -0r rm -r
fi

if [ -n "$rec" ] ; then
	for i in * ; do
		if test -f "$i/${what}_$i.prj" ; then
			( cd $i; p.merge $recopt -d $dir/$i )
		fi
	done
fi

rm -f /usr/src/STATUS/checkout/$desc
rm -f /usr/src/STATUS/checkout/${desc}_*

