#!/usr/bin/perl -w

use Getopt::Std;
use strict 'vars';
use vars qw( $opt_f );

&getopts("f");

chdir("/usr/src") || die "No sources!";

my $label = ($opt_f ? "all" : "dist");
my %allhosts;

if(@ARGV) {
	foreach my $host(@ARGV) {
		$allhosts{$host}++;
	}
	$label = "";
} else {
	opendir(HOSTS,"STATUS/hosts");
	while(defined($_ = readdir HOSTS)) {
		next if $_ eq ".";
		next if $_ eq "..";
		next unless /\./;
		next unless -f "STATUS/hosts/$_";
		$allhosts{$_}++;
	}
	closedir HOSTS;
}

foreach my $host(keys %allhosts) {
	print "$host\n";

	my $pid;
	die "No fork: $!" unless defined ($pid=fork());
	next if $pid != 0;
	#opendir(DIST,"STATUS/dist");
	#while(($dir = readdir DIST) ne "") {
	open(DIST,"STATUS/sequence");
	while(<DIST>) { chop; my $dir = $_;
		next if -f "STATUS/sent/$host/$dir" and -M "STATUS/sent/$host/$dir" > -M "STATUS/dist/$dir";
		print "*** $host *** $dir ***\n";
		die "No fork: $!" unless defined ($pid=fork());
		if($pid == 0) {
			($label eq "") ? (exec {"/usr/bin/rdist"} ("rdist $host","-x","-m",$host,"-f","STATUS/dist/$dir")) : (
			exec {"/usr/bin/rdist"} ("rdist $host","-x","-m",$host,"-f","STATUS/dist/$dir",$label));
			die "no rdist: $!";
			exit(99);
		}
		waitpid($pid,0);
		# die "rdist didn't like us (".($? >> 8).")" if ($? >> 8);
		mkdir ("STATUS/sent/$host",0777);
		if(open(OUT,">>STATUS/sent/$host/$dir")) {
			print OUT ".";
			close OUT;
		}
	}
	#closedir DIST;
	close(DIST);
	exit(0);
}
while(wait >= 0) { }
