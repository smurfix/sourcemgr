#!/bin/sh
. /usr/share/sourcemgr/repository

set -e
trap 'usage; exit 1' 0

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- fetch source code from the master archive
       [ -v branch ]
       [ -w new_branch, creates a copy ]
	     [ -N (don't copy to master) ]
	     [ -p (copy to public archive) ]
       [ -d package | -g (use path) ]
       [ -n (tell bitkeeper not to checkout the source) ]
       [ dirname ]

This program gets a tree from the master repository.

The most common use of this script is
# cd /usr/local/src/some
# b.get -g -v test where
# #or: b.get -d some/where -v test where
# cd where
# work ...

This clones package "some_where-test" from the master into directory "where".
END
}

vers=-
nvers=not/given
dir=
optp=
gpath=
noback=
pub=

   eval set -- "$(getopt "d:gnNpv:w:h" "$@")"
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -d)
			   shift; dir="$1"; shift;;
		   -g)
		   		gpath="$(pwd | sed -ne 's,.*/src/,,p')" ; shift ;;
		   -n)
		       shift; optp=-P ;;
		   -p)
		       shift; pub="public/" ;;
		   -N)
		       shift; noback=1 ;;
		   -v)
			   shift; vers="$1"; shift;;
		   -w)
			   shift; nvers="$1"; shift;;
			--)
				shift; break ;;
	   esac
   done

if test -z "$dir" ; then
	test -n "$1"
	if test -z "$gpath" ; then
		dir="$1"
	else
		dir="$gpath/$1"
	fi
fi
ddir="$1"
test -n "$ddir" || ddir="$(basename "$dir")"
test -z "$2"
test -n "$dir"
test -n "$ddir"

trap '' 0

mod=p
if b.exists -v "$vers" $dir > /tmp/tf.$$ ; then : ; else
	echo >&2 "Problem: '$dir' branch '$vers' not found."
	exit 1
fi
read what dv < /tmp/tf.$$
rm -f /tmp/tf.$$

if test -z "$what" ; then echo >&2 "'$dir' not found" ; exit 1 ; fi
test -z "$dv" || dv="-$dv"
test -z "$nvers" -o "$nvers" = "-" -o "$nvers" = "not/given" || ndv="-$nvers"

if test -z "$1" ; then
	dir="$what$dv"
else
	dir="$1"
fi

if test -e "$dir" ; then
	echo >&2 "$dir: The directory '$dir' already exists."
	exit 1
fi

### $opt_p -- doesn't work
cache="$(b.cache -d "$what" -v "$vers")"
if bk lclone -q "$cache" "$ddir"; then : ; else
	rm -rf "$ddir"
	bk clone -q "$cache" "$ddir"
fi

cd "$ddir"
if test "$nvers" != "not/given" ; then
	echo -n -e "$dir: copy source back    |\r"
	test -n "$noback" || bk clone -q . $BK_REPOSITORY/$pub$what$ndv
	bk parent $BK_REPOSITORY/$what$ndv
	dv="$ndv"
fi
bk parent $BK_REPOSITORY/$what$dv
echo "Cloned package '$what$dv' to '$ddir'."

