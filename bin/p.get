#!/bin/sh

set -e
trap 'usage; exit 1' 0

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- holt Sourcecode aus dem Archiv
       [ -d Paket ]
       [ -v releasename ]  [ -f (force, wenn ohne Terminal) ]
       [ -i (für Import, holt nur .prj) ]
       [ -n (holt direkt nach /usr/src) ]
END
}

vers=noris
imp=
mkdir=
dir=
force=

   eval set -- "$(getopt "d:v:ihnf" "$@")"
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -d)
			   shift; dir="$1"; shift;;
		   -i)
			   shift; imp=y ;;
		   -f)
			   shift; force="-f" ;;
		   -n)
			   shift; mkdir=y ;;
		   -v)
			   shift; vers="$1"; shift;;
			--)
				shift; break ;;
	   esac
   done

dir="$(p.name "$dir")"
desc=$(echo $dir | sed -e 's/\//:/g' -e 's/:*$//')

if test -f "/usr/src/STATUS/checkout/$desc" ; then
    desc=$(sed  -e 's/[ 	].*//' "/usr/src/STATUS/checkout/$desc")
    what=$(echo $desc | sed -e 's/[:\/]/_/g' -e 's/_*$//')
else
    what=$(echo $dir | sed -e 's/\//_/g' -e 's/_*$//')
fi

export PRCS_REPOSITORY=/usr/src/archiv/prcs PRCS_LOGQUERY=1

trap '' 0

if test -n "$imp" ; then imp="$what.prj"; fi
if test -n "$mkdir" ; then
	cd /usr/src
	if test -d "$dir" ; then
		echo "??? $dir: Gibt es schon! Up-to-date??"
	else
		mkdir -p "$dir"
	fi
	cd "$dir"
fi

set -x

prcs checkout $force -r$vers $what.prj $imp "$@"
# prcs execute -r$vers --match :tag=project -- p.sub -v$vers $what '{}'

test -z "$mkdir" || redo $dir
