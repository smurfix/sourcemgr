#!/usr/bin/perl

chdir("/usr/src") || die "No sources!";

$ENV{'PATH'} = "/usr/src/STATUS/bin:".$ENV{'PATH'};

my($fh) = "fh00";
my $verbose = ($#ARGV < 0);

my @all = qw( distribution.noris.net );

sub procsub($$) {
	my($who,$where) = @_;
	my($ff) = $fh++;
	$where = "STATUS/hosts/$where";
	next unless -f $where;
	open($ff,$where);
	while(<$ff>) {
		chop;
		if (/\:/) {
			$dist{$_}{$who}++;
		} else {
			procsub($who,$_);
		}
	}
	close $ff;
}

opendir(HOSTS,"STATUS/hosts");
while($_ = readdir HOSTS) {
	next if $_ eq ".";
	next if $_ eq "..";
	next unless /\./;
	procsub($_,$_);
}
closedir HOSTS;

%allfiles = ();

sub dirlist {
	my($first) = 1;
	my(%first) = ();
	my($ret);

	opendir(DONE,"STATUS/done");
	opendir(DONE2,"STATUS/legacy");
	open(FIRST,"STATUS/first");
	$ret = sub {
		my($fn,$fd);
		while(1) {
			if($first == 1) {
				$fn = <FIRST>;
				chop $fn;
				if($fn eq "") {
					close FIRST;
					$first = 2;
				} else {
					$fd = $fn;
					$fd =~ s/\//:/g;
					next unless -f "STATUS/done/$fd"
					         or -f "STATUS/legacy/$fd";
					$first{$fd} = 1;
					return $fd;
				}
			} elsif($first == 2) {
				$fn = readdir DONE2;
				if($fn eq "") {
					closedir DONE2;
					$first=3;
					next;
				}
				next unless -f "STATUS/legacy/$fn";
				next if $first{$fn};
				return $fn;
			} elsif($first == 3) {
				$fn = readdir DONE;
				if($fn eq "") {
					closedir DONE;
					$first=4;
					next;
				}
				next unless -f "STATUS/done/$fn";
				next if $first{$fn};
				return $fn;
			} else { return undef; }
		}
	} ;
	$ret;
}

sub arglist {
	my($what) = shift @ARGV;
	$what =~ s#/#:#g;
	$what =~ s#:+$##;
	$what;
}

my($dir) = ($#ARGV >= 0) ? \&arglist : &dirlist;

while(($_ = &$dir) ne "") {
	if(-f "STATUS/out/$_") {
		open(FILES, "STATUS/out/$_");
	} else { next; }
	$newdist = "";

	my(@pat,$pat);
	if(-f "STATUS/subst/$_") {
		open(PAT,"STATUS/subst/$_");
		while($pat = <PAT>) {
			chop $pat;
			push(@pat,$pat);
		}
		close(PAT);
	}
	$w = $_;
	%files=();
	@cmds = ();
	while(<FILES>)  {
		chop;
		foreach $pat(@pat) {
			eval $pat;
		}
		$files{$_}++ if $_ ne "";
	}
	close FILES;

	@did = ();
	foreach $force(0,1) {
		if($force) {
			$newdist .= "PROGS";
		} else {
			$newdist .= "FILES";
		}
		$newdist .= "= (\n";
		foreach $file(sort {
				my($xa,$xb)=($a,$b);
				$xa =~ s/(\/\.)+$//;
				$xb =~ s/(\/\.)+$//;
				(-d $xa - -f $xb) or (-d $xa - -l $xb) or (-l $xa - -f $xb) or
				length $xa <=> length $xb or $xa cmp $xb;
			 } keys %files) {
			$sk = 0;
			$sk |= ($file =~ m#^/+usr/#);
			$sk |= ($file =~ m#^/+bin/#);
			$sk |= ($file =~ m#^/+sbin/#);
			$sk |= ($file =~ m#^/+lib/#);
			$sk |= ($file =~ m#^/+boot[-/]#);
			$sk = 0 if -l $file;
			$sk = 0 if -d $file;
			push(@cmds, $file) if $file =~ m#/+sbin/+init\.d/+scripts/# and $force;

			next if ($force == 0) != ($sk == 0);
			if (-e $file) { # and $file !~ m#/tmp/*$#)
				$did[$force]++;
			} else {
				$newdist .= "#";
			}
			$file =~ s#(?![-/.])(\W)#\\$1#g;
			$newdist .= "\t$file\n";
		}
		$newdist .= ")\n";
	}
	$newdist .= "HOSTS= (\n";
	%thishosts = ();
	if(open(HOSTS,"STATUS/hosts/$w")) {
		while(<HOSTS>) {
			chop;
			s/#.*//;
			next if /^\s*$/;
			next if $thishosts{$_};
			$newdist .= "\t$_\n";
			$thishosts{$_}++;
		}
		close HOSTS;
	} else {
		foreach $host(sort { $a cmp $b } @hosts) {
			$newdist .= "\t$host\n";
			$thishosts{$host}++;
		}
	}
	foreach $host(sort { $a cmp $b } keys %{$dist{$w}}) {
		next if $thishosts{$host};
		$newdist .= "\t$host\n";
		$thishosts{$host}++;
	}
	$newdist .= ")\n\n";
	$newdist .= "DISTHOSTS= (\n";
	foreach $host(@all) {
		$newdist .= "\t$host\n";
	}
	$newdist .= ")\n\n";

	if($did[0]) {
		$newdist .= "all:\n";
		$newdist .= "\t\${FILES} -> \${HOSTS}\n";
		$newdist .= "\t\tinstall -ochksym -ochknfs -onodescend -onoexist;\n";
	}
	if($did[1]) {
		$newdist .= "all:\n";
		$newdist .= "\t\${PROGS} -> \${HOSTS}\n";
		$newdist .= "\t\tinstall -ochksym -ochknfs -onodescend;\n";
	}
	if(($did[0] or $did[1]) and open(AFTER,"STATUS/after/$w")) {
		while(<AFTER>) {
			chop;
			$newdist .= "\t\tcmdspecial \"$_\";\n";
		}
		close(AFTER);
	}
	foreach $cmds(@cmds) {
		$newdist .= "\t\tcmdspecial \"$cmds config\";\n";
	}
	my $ww = $w; $ww =~ s/:/\\:/g;

	$newdist .= "DISTFILE = ( /usr/src/STATUS/dist/$ww )\n";
	if($did[0]) {
		$newdist .= "dist:\n";
		$newdist .= "\t\${FILES} -> \${DISTHOSTS}\n";
		$newdist .= "\t\tinstall -ochksym -ochknfs -onodescend -onoexist;\n";
	}
	if($did[1]) {
		$newdist .= "dist:\n";
		$newdist .= "\t\${PROGS} -> \${DISTHOSTS}\n";
		$newdist .= "\t\tinstall -ochksym -ochknfs -onodescend;\n";
	}
	if(($did[0] or $did[1]) and open(AFTER,"STATUS/after/$w")) {
		while(<AFTER>) {
			chop;
			$newdist .= "\t\tcmdspecial \"$_\";\n";
		}
		close(AFTER);
	}
	foreach $cmds(@cmds) {
		$newdist .= "\t\tcmdspecial \"$cmds config\";\n";
	}
	$newdist .= "dist:\n";
	$newdist .= "\t\${DISTFILE} -> \${DISTHOSTS}\n";
	$newdist .= "\t\tinstall;\n";
	open(OUT,"STATUS/dist/$w"); $slash=$/; undef $/; $olddist = <OUT>; close OUT;
	if($newdist ne $olddist) {
		unlink("STATUS/dist/$w");
		open(OUT,">STATUS/dist/$w");
		print OUT $newdist;
		close OUT;
	}
	print $w,"\n" if $verbose;
	$/=$slash;
}

