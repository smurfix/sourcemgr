#!/bin/sh
test -n "$BK_REPOSITORY" || export BK_REPOSITORY=bk://bitkeeper.noris.de

set -e
trap 'usage; exit 1' 0

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- holt Sourcecode aus dem Archiv lokale Cache
       [ -v releasename ]
       [ -d Paket ]
       [ -n (do not update) ]
END
}

vers=noris
dir=
no_update=

   eval set -- "$(getopt "d:nv:h" "$@")"
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -d)
			   shift; dir="$1"; shift;;
		   -v)
			   shift; vers="$1"; shift;;
		   -n)
		   	   shift; no_update=y ;;
		   --)
				shift; break ;;
	   esac
   done

test -n "$dir"
test -z "$1"

trap "" 0

umask 002

mod=p
if b.exists -v "$vers" $dir > /tmp/tf.$$ ; then : ; else
	echo >&2 "Problem: '$dir' Version '$vers' nicht bekannt."
	exit 1
fi
read what dv < /tmp/tf.$$
rm -f /tmp/tf.$$

if test -z "$what" ; then echo >&2 "'$dir' nicht gefunden" ; exit 1 ; fi
test -z "$dv" || dv="-$dv"

dir="$what$dv"

case "$BK_REPOSITORY" in
	/*) if test -d "$BK_REPOSITORY/$dir";  then
			echo "$BK_REPOSITORY/$dir"
			exit 0
		else
			echo "Archiv '$what$dv' gibt es nicht in $BK_REPOSITORY"
			exit 1
		fi
		;;
esac

cbase="/var/cache/bk"

if test -d "$cbase" ; then : ; else
	echo "$cbase: Cache Directory doesn't exist." >&2
	exit 1
fi

if shlock /var/lock/b.cache.$what$dv ; then : ; else
	echo "$what$dv: Locked." >&2
	exit 1
fi
trap "rm -f /var/lock/b.cache.$what$dv" 0

c="$cbase/$what$dv"
if test -d "$c" ; then
	mv "$c" "$c.x"
	cd "$c.x"

	if test -z "$no_update" ; then
		echo "$what$dv: Updating cache. Changes:" >&2
		env PAGER=/bin/cat bk changes -R -nd":I:	:USER:@:DOMAIN:" >&2
		echo -n -e "... end of change list\r" >&2
		bk sfiles -ax | while read a ; do rm -f "$a" ; done
		bk pull -q $BK_REPOSITORY/$what$dv 
		R=$(bk changes -r+ -d':USER:@:HOST:|:G:|:UTC:|:DSUM:\n' $(bk parent -p))
		L=$(bk changes -r+ -d':USER:@:HOST:|:G:|:UTC:|:DSUM:\n')
		if test "$L" != "$R" ; then
			echo "Problem: changesets differ" >&2
			echo "remote:$R" >&2
			echo "local :$L" >&2
			exit 1
		fi
	fi
else
	echo "$what$dv: Importing to cache" >&2
	rm -rf "$c" "$c.x"
	bk clone -q $BK_REPOSITORY/$what$dv "$c.x"
fi
mv "$c.x" "$c"
echo "$c"

