#!/bin/sh

set -e
trap 'usage; exit 1' 0

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- updatet Bitkeeper aus Remote-CVS
       [ -d Paket ]
       [ -l (kein PSERVER) ]
       [ -n (kein push) ]
       [ -r releasename (CVS) ]
       [ -v releasename (base) ]
       [ -w releasename (new) ]
       [ -V (verbose) ]
       [ -D Datum ] [ -Z (keine Kompression) ]
       woher  was

"woher" ist der Name des entfernten Repository.
"was" ist der Name des Archivs dort.
END
}


PATH=/usr/src/STATUS/bin:/usr/local/bin:$PATH

dir=
vers=extern
nvers=
nopush=
rvers=
rdir=
datum=$(date '+%Y-%m-%d')
sdatum=now
quiet=-q
comp=-z3
loc=

   eval set -- "$(getopt "Vd:v:w:r:hD:Zln" "$@")"
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -Z)
		   	   shift; comp="" ;;
		   -V)
		   	   shift; quiet="" ;;
		   -D)
			   shift; D=$(echo $1|sed -e 's/_/ /g'); datum="$D"; sdatum="$D"; shift;;
		   -d)
			   shift; dir="$1"; shift;;
		   -v)
			   shift; vers="$1"; shift;;
		   -w)
			   shift; nvers="$1"; shift;;
		   -r)
			   shift; rvers="-r $1"; rdir="-$1"; shift;;
			-n)
				shift; nopush=y ;;
			-l)
				shift; loc=y ;;
			--)
				shift; break ;;
	   esac
   done

set -e
if test -z "$nvers" ; then nvers=$vers; fi

if test -z "$dir" ; then
	b.name > /tmp/bn.$$
	read dir overs < /tmp/bn.$$
	rm -f /tmp/bn.$$
fi

test -n "$2"
test -z "$3"
if test -z "$loc" ; then
woher=":pserver:$1"
else
woher="$1"
fi
was="$2"
what=$(echo $dir | sed -e 's/\//_/g' -e 's/_*$//')

trap 'usage; exit 1' 0

cd /var/cache/cvs
mkdir -p bk/tmp
tmp="/var/cache/cvs/bk/tmp/$$"
rm -rf "$tmp"
dest=/var/cache/cvs/bk/"$dir-$vers"

if $(b.exists "$dir" -v "$vers" >/tmp/bn.$$)  ; then
	if test -n "$nvers" -a "$vers" != "$nvers"; then
		rm -rf "bk/$dir-$nvers"
		b.get -d "$dir" -v "$vers" -w "$nvers" -n "bk/$dir-$nvers"
		vers="$nvers"
	elif ! test -d "$dest" ; then
		b.get -d "$dir" -v "$vers" -n "$dest"
	fi
else
	test -z "$nvers"
	b.new -d "$dir" -v "$vers" "aus CVS: $woher / $was"
	b.get -d "$dir" -v "$vers" -n "$dest"
fi

#mkdir -p $was$rdir
if test "$was" = "." ; then
	gdir=$(basename $dir)
else
	gdir=$(basename $was)
fi

echo CVS: $sdatum
if test -d $gdir$rdir; then 
	cd $gdir$rdir
	rm -f $what.prj .$what.prcs_aux
	rm -rf ChangeSet BitKeeper
	find . -name SCCS -type d -prune -print0 | xargs -0r rm -rf
	test -n "$quiet" || echo CVS $quiet $comp -d $woher update -Pd -ko -D "$sdatum" $rvers
	cvs $quiet $comp -d $woher update -Pd -ko -D "$sdatum" $rvers
else
	if test "$was" = "." ; then mkdir -p $gdir$rdir; cd $gdir$rdir; ddir=.
	else ddir="$gdir$rdir"; fi
	test -n "$quiet" || echo CVS $quiet $comp -d $woher checkout -ko -d $was$rdir -D "$sdatum" $rvers $was
	cvs $quiet $comp -d $woher checkout -ko -d $ddir -D "$sdatum" $rvers $was
	if test "$was" != "." ; then cd $gdir$rdir; fi
fi

trap "rm -rf $tmp; exit 1" 0

done=/tmp/done.$$
( cd $dest; find . -type d -name SCCS -prune -print | grep -v "^\./BitKeeper/"
  echo BitKeeper ) |
( set -e
  while read a ; do
	mkdir -p "$(dirname "$a")"
    mv "$dest/$a" "$a"
  done
  touch $done
)
if test -f $done ; then rm -f $done; else exit 1; fi
undoit() {
	( find . -type d -name SCCS -prune -print | grep -v "^\./BitKeeper/"
	  echo BitKeeper ) |
	( set -e
	  while read a ; do
		mkdir -p "$dest/$(dirname "$a")"
		mv "$a" "$dest/$a"
	  done
    )
}
trap "rm -rf $tmp; undoit; exit 1" 0

echo Importing into Bitkeeper
b.import.pl $datum "CVS:$datum"

test -n "$nopush" || bk push

trap "" 0
set +e
rm -rf $tmp
undoit
exit 0
