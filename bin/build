#!/bin/sh

umask 002


#if [ -z "$1 ] ; then
#	dest="compile"
#else
#	dest=$1
#fi

PATH=/usr/src/STATUS/bin:$PATH
ulimit -c 1000000
what=

set -- `getopt fcip $*`
if test $? != 0
then
        echo 'Usage: ...'
        exit 2
fi
for i ; do
        case "$i"
        in
                -f)
                        force=1; shift;;
                -c)
                        noupdate=1; shift;;
                -i)
                        noupdate=1; nomake=1; shift;;
				-p)
						dir=$(/bin/pwd|sed -e 's/^.*\.src\///')
						what=$(echo $dir | sed -e 's/\//:/g' -e 's/:*$//')
						shift;;
                --)
                        shift; break;;
        esac
done

if test -z "$nomake" -a "$(whoami)" = "root" ; then
	echo "Unsere Sourcen werden bitte NICHT als Root gebaut, nur installiert."
	exit 1
fi

if test -n "$nomake" -a "$(whoami)" != "root" ; then
	echo "Unsere Sourcen werden bitte als Root installiert."
	exit 1
fi

fn=1
cd /usr/src
exec 3>&1

if test -n "$what" ; then
  echo HEAD $what
elif test -z "$1" ; then
  cat STATUS/build
else
  for i ; do 
    echo HEAD $i
  done
fi | sed -e '/^#/d' -e 's/^\? /HEAD /' |
while read ver dir rest ; do
	tag=$(echo $dir | sed -e 's|/|:|g' -e 's|:*$||')
	dir=$(echo $tag | sed -e 's|:|/|g')
	echo -n "$dir : "
	if test -z "$noupdate" -a -f STATUS/legacy/$tag ; then
		echo "will not be done."
		if test -f STATUS/out/$tag ; then : ; else
			gen.flist <STATUS/legacy/$tag | sort -u > STATUS/out/$tag &
		fi
	elif test -z "$noupdate" -a -f STATUS/done/$tag ; then
		echo -en "done.\r                                  \r"
	elif test -f STATUS/work/$tag ; then
		echo -n "in progress: "
		head -1 STATUS/work/$tag 
	elif test -z "$noupdate" -a -f STATUS/fail/$tag ; then
		echo -n "had problems, please fix: "
		head -1 STATUS/fail/$tag 
	elif test -f STATUS/to-install/$tag -a -z "$nomake" ; then
		echo "needs to get installed."
	elif test ! -f STATUS/to-install/$tag -a -n "$nomake" ; then
		if test ! -f STATUS/done/$tag ; then
		    echo "needs to be built."
		else
		    echo -ne "done.\r                                  \r"
		fi
	else
		if test -f STATUS/to-install/$tag ; then
			mv STATUS/to-install/$tag STATUS/work/$tag 
			echo '# RESTART' $(hostname) $$ >> STATUS/work/$tag
		else
			echo $(hostname) $$ > STATUS/work/$tag
			echo "Go to work!"
		fi

		fn=$(expr $fn + 1)
		mkfifo /tmp/ff.$$.$fn
		( while read a ; do echo "# $a" ; done < /tmp/ff.$$.$fn | tee -a STATUS/work/$tag ) &
		sleep 1
		exec > /tmp/ff.$$.$fn 2>&1

		if test -f STATUS/checkout/$tag ; then
			read what comp inst < STATUS/checkout/$tag
			goto=$(dirname $dir)
			out=$(basename $dir)
			mkdir -p $goto
			where=" -d $out"
		else
			what=$dir
			where=""
			comp="compile"
			inst="install"
			goto=.
			out=$dir
			rel=
		fi
		pd=$(pwd)
		if test -z "$noupdate" ; then
			if test -d $dir; then
				echo "+++ $dir +++ NO update ($where $what $ver)"
				# cd $dir; cvs update -r $ver;
				# did=$?;
				did=0
			else
				echo "+++ $dir +++ $goto cvs checkout $rel $where $what $ver"
				if test -n "$ver" ; then ver="-r $ver"; fi
				# XXXXXXXXX
					ver=
				# XXXXXXXXX
				cd $goto; cvs checkout $ver $where $what
				did=$?
			fi
		else
			did=0
		fi
		cd $pd
		if test $did = 0 ; then
			echo "+++ $dir +++ Make $comp"
			if test -n "$nomake" || make -C $dir -f Makefile.Linux $comp </dev/null ; then
				if test -n "$nomake" ; then
					echo "+++ $dir +++ Make $inst"
					if make -C $dir LD_PRELOAD=/usr/lib/log-install.so LOGFILE=/usr/src/STATUS/work/$tag -f Makefile.Linux $inst </dev/null ; then
						mv STATUS/work/$tag STATUS/done/$tag
						echo "+++ $dir +++ Release"
#						if test -n "$ver" -a ! -f STATUS/keep/$tag ; then 
#							yes n | cvs release $dir && rm -rf $dir || echo "*** $dir *** Release failed"
#						fi
###
						echo "Building file list in background."
						(
							(	gen.flist <STATUS/done/$tag
								if test -f STATUS/out/$tag ; then cat STATUS/out/$tag ; fi
							)	| sort -u > STATUS/out/new.$tag 
							mv -f STATUS/out/new.$tag STATUS/out/$tag
						) &
					else
						echo "*** $dir *** Make install failed"
						mv STATUS/work/$tag STATUS/fail/$tag
					fi
				else
					echo "*** $dir *** Make install : ROOT!"
					mv STATUS/work/$tag STATUS/to-install/$tag
				fi
			else
				echo "*** $dir *** Make failed"
				mv STATUS/work/$tag STATUS/fail/$tag
			fi
		else
			echo "*** $dir *** Checkout failed"
			echo "Checkout failed" >STATUS/fail/$tag
			mv STATUS/work/$tag STATUS/fail/$tag
		fi
		exec >&3 2>&1
		rm /tmp/ff.$$.$fn
	fi
done 

echo "Done."

exit

echo "Building distfiles."

set -x
./gen.distfile | tee STATUS/distfiles | while read a ; do 
	rdist -f STATUS/dist/$a
done 

