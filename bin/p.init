#!/bin/sh
 
set -e
trap 'usage; exit 1' 0

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- Initiales Installieren von externem Source im Archiv
       [ -d dest-directory ]
       [ -v releasename ]
       [ -V origreleasename ]
       [ -e (nur extern) ]
       [ -i (nur intern) ]
       [ -u URL ]
       [ -a SUBDIST (append to distrib file ('perl', 'router', 'user'...),
                     see \$(src)/STATUS/hosts/*. ]
       [ -p Perl-Makefile anlegen ]
       [ -k Kurzbeschreibung ]
	   [ -E (editiere Projectfiles) ]
	   Version

Wenn die Kurzbeschreibung angegeben ist, wird ein Eintrag in
         STATUS/build generiert.
END
}

dir=
vers=noris
info=
overs=base
exto=
into=
url="-"
perl=
edit=
dfile=

   set -- $(getopt "d:v:V:eihu:pk:Ea:" $*)
   for i
   do
	   case "$i"
	   in
		   -h)
		       exit 1 ;;
		   -E)
		       edit=y; shift ;;
		   -p)
		       perl=y; shift ;;
		   -a)
		       shift; dfile=$1; shift ;;
		   -u)
			   shift; url="$1"; shift;;
		   -d)
			   shift; dir="$1"; shift;;
		   -k)
		       shift; info="$1"; shift;;
		   -v)
			   shift; vers="$1"; shift;;
		   -V)
			   shift; overs="$1"; shift;;
		   -e)
		       shift; into=x ;;
		   -i)
		       shift; exto=x ;;
		   --)
		   		shift; break ;;
	   esac
   done

set -e
dir="$(p.name "$dir")"
export PRCS_REPOSITORY=/usr/src/archiv/prcs PRCS_LOGQUERY=1
what=$(echo $dir | sed -e 's/\//_/g' -e 's/_*$//')
dist=$(echo $dir | sed -e 's/\//:/g' -e 's/:*$//')

trap '' 0

if test -z "$exto" ; then

prcs checkout -r $overs.@ $what
prcs populate $what

perl -p -i -e '
   s#\(Populate-Ignore\s+\(\)#(Populate-Ignore ("/CVS/" "^CVS/" "\\\\.rej\$" "\\\\.orig\$") #;
    s/^  \((.*)\(\)\)/  ($1() :no-keywords)/;
	s/^\(Project-Description\s+""\)/(Project-Description "'"$info"'")/;
	s/\(New-Version-Log \"\"\)/(New-Version-Log "'"$*"'")/;
' $what.prj

cat <<END >>$what.prj
;;*
;;* Externe Version. 
;;* Hier keine internen Modifiaktionen ablegen!
;;*
END
test -z "$edit" || vi $what.prj
prcs checkin -r$overs.@ $what </dev/tty
prcs admin compress $what

else
prcs checkout -r $overs $what $what.prj
fi

if test -z "$into" ; then

perl -i -n -e '
   s#\(Populate-Ignore\s+\(\)#(Populate-Ignore ("/CVS/" "^CVS/" "\\\\.rej\$" "\\\\.orig\$") #;
   s/\(New-Version-Log \"\"\)/(New-Version-Log "'Import\ $sv'")/ if "'"$sv"'" ne "";
   # s/^  \((.*)\(\)\)/  ($1() :no-keywords)/;
   print unless /^;;\*/;
' $what.prj

cat <<END >>$what.prj
;;*
;;* Interne Version. 
;;*
END

if test ! -f Makefile.Linux ; then

if test -n "$perl" ; then
cat <<'END' >Makefile.Linux

Makefile:
	perl Makefile.PL
	# patch -p1 < Makefile.dif
compile: Makefile
	$(MAKE)
install: Makefile
	$(MAKE) install
END

else

cat <<'END' >Makefile.Linux
#!/usr/bin/make -f

flags=

Makefile:
	./configure --prefix=/usr --enable-shared --with-shared

compile: Makefile
	$(MAKE) $(flags)

install: Makefile
	$(MAKE) install $(flags)

clean: Makefile
	$(MAKE) clean $(flags)

END
fi
fi

prcs populate $what 

test -z "$edit" || vi $what.prj

prcs checkin -r$vers.@ $what </dev/tty
prcs admin compress $what

fi

if test -n "$info" ; then
	echo "*	$dir	$*	$info	$url" >> /usr/src/STATUS/build
fi
if test -n "$dfile" ; then
	echo "$dist" >> /usr/src/STATUS/hosts/$dfile
fi
## * kernel/base * Code zum Bauen der Standarddistribution -

