#!/bin/sh

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- Importieren eines CVS-Archivs
       [ -d dest-directory ]
       [ -V origreleasename ]
       [ -v releasename ]
       [ -t CVS-Dateiname ]
       [ -u URL ]
       [ -g (goto Source and do internal version too) ]
       [ Beschreibungstext ]
END
exit 1
}

dir=$(/bin/pwd|sed -ne 's/^.*[\./]src\///p')
overs=
vers=noris
txt="$dir"
url=
cfile=
LV=/tmp/lv.$$
goto=

   set -- $(getopt "gd:t:V:v:hu:" $*)
   if test $? != 0
   then
	   usage
   fi
   for i
   do
	   case "$i"
	   in
		   -h)
		       usage ;;
		   -g)
			   goto="y"; shift;;
		   -t)
			   shift; cfile="$1"; shift;;
		   -u)
			   shift; url="$1"; shift;;
		   -d)
			   shift; dir="$1"; shift;;
		   -v)
			   shift; vers="$1"; shift;;
		   -V)
			   shift; overs="$1"; shift;;
		   --)
		       shift; break ;;
	   esac
   done

if test -z "$dir"; then usage; fi
if test -n "$*" ; then txt="$*"; fi
if test -n "$goto" ; then
	cd /usr/src
	if test ! -d "$dir" ; then
		mkdir -p $dir
		cd $dir
		cvs -Q checkout -ko -d . $dir
	else
	    cd $dir
	fi
	if test -n "$cfile" ; then 
		cfile="$(pwd)/$cfile"
	fi
fi

export PRCS_REPOSITORY=/archiv/src/prcs PRCS_LOGQUERY=1
what=$(echo $dir | sed -e 's/\//_/g' -e 's/_*$//')

cd /tmp/; mkdir x.$$; cd x.$$

set -e

if test -n "$overs" ; then ov="$overs.@"; else ov="base.@"; fi
prcs checkout -r $ov $what $what.prj </dev/tty
perl -p -e '
  s#\(Project-Description \"\"\)#(Project-Description "'"$txt"'")#;
' < $what.prj > $what.prx && mv $what.prx $what.prj

cat <<END >>$what.prj
;;*
;;* Externe Version. 
;;* Hier keine internen Modifiaktionen ablegen!
;;*
END

(
    if test -n "$cfile" ; then 
	   cvs log "$cfile" 
	else
       while read a ; do echo "$a"; done
	fi
) |
perl -e '
while(<>) { push(@lst,$_) if s/.*?\b(r|hj)-([-0-9a-z]*)($|[^-0-9a-z].*)/$2/; }
print reverse @lst;
' | while read sv ; do

nsv=$(echo $sv | \
  sed \
   -e 's/-/./g' \
   -e 'y/abcdefghijklmnopqrstuvwxyz/12345678912345678912345678/' \
   -e 's/\.0*\([0-9]\)/.\1/g' \
   -e 's/\.\.*/./g' \
   -e 's/$/.@/'
)

echo $dir: Cleanup...

find . -name $what.prj -o -type d -o -print0 | xargs -r0 rm -f
find . -mindepth 1 -type d -depth -print0 | xargs -r0 rmdir

echo $dir: Checking out $sv

cvs -Q export -ko -r r-$sv -d . $dir 

prcs populate -f -d $what </dev/tty

perl -p -e '
   s/\(New-Version-Log \"\"\)/(New-Version-Log "'Import\ $sv'")/;
   s/^  \((.*)\(\)\)/  ($1() :no-keywords)/;
' < $what.prj > $what.prx && mv $what.prx $what.prj

echo $dir: Checking in $nsv '<=' $sv

if test -n "$overs" ; then nsv="$overs.@" ; else nsv="base.@"; fi
#if test -n "$overs" ; then nsv="$overs.$nsv" ; else nsv="base.@"; fi
prcs checkin -r$nsv $what </dev/tty
echo $sv >$LV

ov="$overs.$nsv"

done

echo $dir: DONE, Version ist $ov
cd ..

if test -z "$url" ; then url="?"; fi
lv="$(cat $LV)"
if test -n "$overs" ; then ov="$overs"; else ov="*"; fi

echo "*	$dir	$ov	$txt	$lv	$url" >>/usr/src/STATUS/build

rm -rf x.$$ LV.$$

if test -n "$goto" ; then

cd /usr/src/$dir

if test -n "$overs" ; then ov="$overs.@"; else ov="base.@"; fi
prcs checkout -f -r $ov $what $what.prj
perl -n -i -e '
   s#\(Populate-Ignore\s+\(#(Populate-Ignore ("/CVS/" "^CVS/" "\\\\.rej\$" "\\\\.orig\$" #;
    print unless /^;;\*/;
' $what.prj

cat <<END >>$what.prj
;;*
;;* Interne Version. 
;;*
END

if test ! -f Makefile.Linux ; then

cat <<'END' >Makefile.Linux
#!/usr/bin/make -f

flags=

Makefile:
	./configure --prefix=/usr --enable-shared --with-shared

compile: Makefile
	$(MAKE) $(flags)

install: Makefile
	$(MAKE) install $(flags)

clean: Makefile
	$(MAKE) clean $(flags)

END
fi

prcs populate -f -u $what

perl -p -e '
   s/\(New-Version-Log \"\"\)/(New-Version-Log "'"Initialer Checkin aus CVS, Version $lv"'")/;
   # s/^  \((.*)\(\)\)/  ($1() :no-keywords)/;
' < $what.prj > $what.prx && mv $what.prx $what.prj

vi $what.prj </dev/tty
prcs checkin -f -r$vers $what
redo $dir

fi

