#!/bin/sh

usage() {
cat >&2 <<END
Usage: $(basename $0)  -- Patchen externer Sourcen
       [ -d dest-directory ]
       [ -W origreleasename ]
       [ -V neworigreleasename ] | [ -v releasename ]
       [ -pX (Argument für patch) ]
       [ neueVersionsnummer ]
END
exit 1
}

dir=$(/bin/pwd|sed -ne 's/^.*[\./]src\///p')
overs=base
nvers=base
vers=
patchdepth=

   set -- $(getopt "d:V:W:hv:r:p:" $*)
   if test $? != 0
   then
	   usage
   fi
   for i
   do
	   case "$i"
	   in
		   -h)
		       usage ;;
		   -p)
			   shift; patchdepth="$1"; shift;;
		   -d)
			   shift; dir="$1"; shift;;
		   -W)
			   shift; overs="$1"; shift;;
		   -V)
			   shift; nvers="$1"; shift;;
		   -v)
			   shift; vers="$1"; shift;;
		   --)
		   	   shift; break;
	   esac
   done

if test -z "$dir"; then usage; fi
if test -z "$*" ; then usage; fi

desc=$(echo $dir | sed -e 's/\//:/g' -e 's/:*$//')

if test -f "/usr/src/STATUS/checkout/$desc" ; then
    desc=$(sed  -e 's/[ 	].*//' "/usr/src/STATUS/checkout/$desc")
    what=$(echo $desc | sed -e 's/[:\/]/_/g' -e 's/_*$//')
else
    what=$(echo $dir | sed -e 's/\//_/g' -e 's/_*$//')
fi

export PRCS_REPOSITORY=/archiv/src/prcs PRCS_LOGQUERY=1

set -xe

mkdir /tmp/$what.$$
cd /tmp/$what.$$
prcs checkout -f -r $overs.@ $what
cp $what.prj ../$what.prj.$$

if test -n "$patchdepth" ; then patchdepth="-p$patchdepth"; fi
patch $patchdepth -E -l

prcs populate -f -d $what

perl -p -i -e '
   BEGIN { $s="'"$*"'"; $s = "Version $s" if $s ne ""; $s =~ s/"/'\''/g; }
   s/\(New-Version-Log \"\"\)/(New-Version-Log "$s")/ if $s ne "";
   s/^  \((.*)\(\)\)/  ($1() :no-keywords)/;
' $what.prj

echo prcs checkin -r $vers.@ $what </dev/tty

cd ..
rm -rf $what.prj.$$ $what.$$ &
